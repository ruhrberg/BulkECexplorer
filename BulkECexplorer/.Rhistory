arrange(dep_delay)
flights %>%
arrange(desc(dep_delay))
flights %>%
arrange(desc(dep_delay)) %>%
slice(1:10) # if we wanted to get only top 10
View(flights)
flights %>%
arrange(desc(dep_delay), arr_delay)
flights %>%
arrange(dep_delay-arr_delay)
flights %>%
arrange(arr_delay-dep_delay)
flights2 <- flights %>%
mutate(speed = dist / (time/60))
View(flights2)
flights %>%
group_by(date) %>%
summarise(count = n())
# average departure delay for each destination
delays <- flights %>%
group_by(dest) %>%
summarise(mean = mean(dep_delay)) %>% drop_na(mean)
View(delays)
# average departure delay for each destination
delays <- flights %>%
group_by(dest) %>%
summarise(mean = mean(dep_delay)) %>%
drop_na(mean)
# join the carrier and flight to create a unique flight_id column
flights %>%
unite(flight_id, carrier, flight, sep = "-", remove = FALSE) %>% # remove = F keeps the original cols
select(date, carrier, flight, flight_id)
flights %>%
unite(flight_id, carrier, flight, sep = "-", remove = FALSE)
# join the carrier and flight to create a unique flight_id column
flights %>%
unite(flight_id, carrier, flight, sep = "-", remove = FALSE) %>% # remove = F keeps the original cols
select(date, carrier, flight, flight_id)
flights %>%
unite(flight_id, carrier, flight, sep = "-", remove = FALSE)
# join the carrier and flight to create a unique flight_id column
flights %>%
unite(test, flight_id, carrier, flight, sep = "-", remove = FALSE) %>% # remove = F keeps the original cols
select(test)
# join the carrier and flight to create a unique flight_id column
flights %>%
unite(., test, flight_id, carrier, flight, sep = "-", remove = FALSE) %>% # remove = F keeps the original cols
select(test)
# join the carrier and flight to create a unique flight_id column
flights %>%
unite(flight_id, carrier, flight, sep = "-", remove = FALSE) %>% # remove = F keeps the original cols
select(date, carrier, flight, flight_id)
# split the date column into separate date and time columns
flights %>%
separate(date, c("date", "time"), sep = " ")
glimpse(flights)
flights$date
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
library(factoextra)
library(tibble)
library(stringr)
library(ggrepel)
library(pracma); library(MESS) # auc
library(ggsignif)
library(readxl)
library(tools)
# remotes::install_github("asardaes/dtwclust")
library(dtwclust)
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
# Select which columns containg the gtt data
cols <- c("X6h_fasting_glucose", "X15_min", "X30_min", "X60_min", "X120_min")
filenames <- c("GTT_group_means.png", "GTT_group_means_norm.png", "GTT_AUC.png", "GTT_AUC_norm.png", "GTT_fasting.png")
### Wrapper function
DietTracker_GTT_plots <- function(file, filenames){
# Load data
if(file_ext(file) %in% c("xls", "xlsx")){
gtt_df <- readxl::read_excel(file, col_names = T)
colnames(gtt_df) <- make.names(colnames(gtt_df)) # Colnames can't start with number, adds an X in front
} else if(file_ext(file) == "csv"){
gtt_df <- read.csv(file)
}
# If any fields contain "Hi", replace it by 33.3 (max detectable by device) and mutate column to numeric
gtt_df <- gtt_df %>%
mutate(across(everything(), ~replace(., . == "Hi", 33.3))) %>%
mutate_at(cols, ~as.numeric(.))
time_start <- which(colnames(gtt_df) %in% cols)[1]
time_end <- which(colnames(gtt_df) %in% cols)[length(which(colnames(gtt_df) %in% cols))]
# Normalising data by dividing by t0 value
gtt_df_norm <- gtt_df %>%
mutate(across(time_start:time_end, ~ .x/X6h_fasting_glucose))
# GTT curves
DietTracker_GTT_curves(df = gtt_df,
original_file = file,
filename = filenames[1],
norm = F)
DietTracker_GTT_curves(gtt_df_norm,
original_file = file,
filename =  filenames[2],
norm = T)
# GTT AUCs
DietTracker_GTT_AUC(df = gtt_df,
original_file = file,
filename = filenames[3],
norm = F)
DietTracker_GTT_AUC(gtt_df_norm,
original_file = file,
filename =  filenames[4],
norm = T)
# GTT fasting glc
DietTracker_GTT_fasting_glc(df = gtt_df,
original_file = file,
filename = filenames[5])
}
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
install.packages("ggprism")
library(ggprism)
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### Wrapper function
DietTracker_GTT_plots <- function(file, filenames){
# Load data
if(file_ext(file) %in% c("xls", "xlsx")){
gtt_df <- readxl::read_excel(file, col_names = T)
colnames(gtt_df) <- make.names(colnames(gtt_df)) # Colnames can't start with number, adds an X in front
} else if(file_ext(file) == "csv"){
gtt_df <- read.csv(file)
}
# If any fields contain "Hi", replace it by 33.3 (max detectable by device) and mutate column to numeric
gtt_df <- gtt_df %>%
mutate(across(everything(), ~replace(., . == "Hi", 33.3))) %>%
mutate_at(cols, ~as.numeric(.))
time_start <- which(colnames(gtt_df) %in% cols)[1]
time_end <- which(colnames(gtt_df) %in% cols)[length(which(colnames(gtt_df) %in% cols))]
# Normalising data by dividing by t0 value
gtt_df_norm <- gtt_df %>%
mutate(across(time_start:time_end, ~ .x/X6h_fasting_glucose))
# GTT curves
DietTracker_GTT_curves(df = gtt_df,
original_file = file,
filename = filenames[1],
norm = F)
DietTracker_GTT_curves(gtt_df_norm,
original_file = file,
filename =  filenames[2],
norm = T)
# GTT AUCs
DietTracker_GTT_AUC(df = gtt_df,
original_file = file,
filename = filenames[3],
norm = F)
DietTracker_GTT_AUC(gtt_df_norm,
original_file = file,
filename =  filenames[4],
norm = T)
# GTT fasting glc
DietTracker_GTT_fasting_glc(df = gtt_df,
original_file = file,
filename = filenames[5])
}
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
library(factoextra)
library(tibble)
library(stringr)
library(ggrepel)
library(pracma); library(MESS) # auc
library(ggsignif)
library(readxl)
library(tools)
library(ggprism)
# remotes::install_github("asardaes/dtwclust")
library(dtwclust)
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
# Select which columns containg the gtt data
cols <- c("X6h_fasting_glucose", "X15_min", "X30_min", "X60_min", "X120_min")
filenames <- c("GTT_group_means.png", "GTT_group_means_norm.png", "GTT_AUC.png", "GTT_AUC_norm.png", "GTT_fasting.png")
### Wrapper function
DietTracker_GTT_plots <- function(file, filenames){
# Load data
if(file_ext(file) %in% c("xls", "xlsx")){
gtt_df <- readxl::read_excel(file, col_names = T)
colnames(gtt_df) <- make.names(colnames(gtt_df)) # Colnames can't start with number, adds an X in front
} else if(file_ext(file) == "csv"){
gtt_df <- read.csv(file)
}
# If any fields contain "Hi", replace it by 33.3 (max detectable by device) and mutate column to numeric
gtt_df <- gtt_df %>%
mutate(across(everything(), ~replace(., . == "Hi", 33.3))) %>%
mutate_at(cols, ~as.numeric(.))
time_start <- which(colnames(gtt_df) %in% cols)[1]
time_end <- which(colnames(gtt_df) %in% cols)[length(which(colnames(gtt_df) %in% cols))]
# Normalising data by dividing by t0 value
gtt_df_norm <- gtt_df %>%
mutate(across(time_start:time_end, ~ .x/X6h_fasting_glucose))
# GTT curves
DietTracker_GTT_curves(df = gtt_df,
original_file = file,
filename = filenames[1],
norm = F)
DietTracker_GTT_curves(gtt_df_norm,
original_file = file,
filename =  filenames[2],
norm = T)
# GTT AUCs
DietTracker_GTT_AUC(df = gtt_df,
original_file = file,
filename = filenames[3],
norm = F)
DietTracker_GTT_AUC(gtt_df_norm,
original_file = file,
filename =  filenames[4],
norm = T)
# GTT fasting glc
DietTracker_GTT_fasting_glc(df = gtt_df,
original_file = file,
filename = filenames[5])
}
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
### GTT ###
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
source("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/diet_tracker_functions.r")
DietTracker_GTT_plots("/home/guille/OneDrive/PhD_Project/Second_experiment_diets/Mouse_tracking/Joint_analysis_WT1_WT2_WT3/GTT/GTT_WT1_WT2_WT3_mm.xlsx", filename = filenames)
library(rtracklayer)
install.packages("rtracklayer")
BiocManager::install("rtracklayer")
alibrary(rtracklayer)
library(rtracklayer)
ens37 <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Homo_sapiens.GRCh37.87.gtf.gz")
View(ens37)
ens37 <- ens37 %>% select(gene_id)
library(tidyverse)
ens37 <- ens37 %>% select(gene_id)
library(tidyverse)
library(dplyr)
# BiocManager::install("rtracklayer")
library(rtracklayer)
library(dplyr)
ens37 <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Homo_sapiens.GRCh37.87.gtf.gz")
ens37 <- ens37 %>% select(gene_id)
ens38 <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Homo_sapiens.GRCh38.109.gtf.gz")
ens38 <- ens38 %>% select(gene_id)
test <- ens37 %>% filter(!(gene_id %in% ens38$gene_id))
View(test)
View(ens38)
test <- ens37 %>% filter(!(gene_id %in% ens38$gene_id)) %>% distinct()
cleanEM <- readRDS("/home/guille/OneDrive/Ruhrberg_Lab/James/BECexplorer/CleanEM.RDS")
clenEM <- cleanEM %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
select(all_of(c("Gene.Name", "cell.type", run))) %>%
distinct()
duplicates_cleanEM <- cleanEM %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
select(all_of(c("Gene.Name", "cell.type", "run"))) %>%
distinct()
View(duplicates_cleanEM)
duplicates_cleanEM <- cleanEM %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
select(all_of(c("Gene.Name", "cell.type", "run"))) %>%
distinct()
affected_datasets <- duplicates_cleanEM %>%
select(run) %>%
distinct()
View(affected_datasets)
affected_datasets <- duplicates_cleanEM %>%
select(run)
affected_datasets <- duplicates_cleanEM %>%
ungroup() %>%
select(run) %>%
distinct()
View(affected_datasets)
affected_datasets <- duplicates_cleanEM %>%
ungroup() %>%
select(run) %>%
distinct() %>%
mutate(filenames = paste0(run, ".tab"))
View(cleanEM)
test <- cleanEM %>% select(run) %>% distinct()
View(test)
affected_genes <- duplicates_cleanEM %>%
select(Gene.Name) %>%
distinct()
duplicates_cleanEM <- cleanEM %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
select(all_of(c("Gene.Name", "cell.type", "run"))) %>%
distinct() %>%
ungroup()
affected_genes <- duplicates_cleanEM %>%
select(Gene.Name) %>%
distinct()
affected_genes <- duplicates_cleanEM %>%
select(Gene.Name) %>%
distinct() %>%
pull()
View(duplicates_cleanEM)
View(ens38)
ens38_full <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Homo_sapiens.GRCh38.109.gtf.gz")
View(ens38_full)
ens37_full <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Homo_sapiens.GRCh37.87.gtf.gz")
ens37 <- ens37_full %>%
select(type == "gene")
View(ens37_full)
View(ens37)
View(ens37)
ens37 <- ens37_full %>%
filter(type == "gene")
View(ens37)
ens38 <- ens38_full %>%
filter(type == "gene")
View(ens38)
View(ens38_full)
View(ens38_full)
View(ens37_full)
View(ens37_full)
mm39_full <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Mus_musculus.GRCm39.109.gtf.gz")
View(mm39_full)
sort(affected_genes)
View(affected_datasets)
View(duplicates_cleanEM)
View(mm39_full)
mm38_full <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Mus_musculus.GRCm38.100.gtf.gz")
View(mm38_full)
hs38 <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Homo_sapiens.GRCh38.100.gtf.gz")
View(hs38)
cleanEM <- readRDS("/home/guille/OneDrive/Ruhrberg_Lab/James/BECexplorer/CleanEM.RDS")
duplicates_cleanEM <- cleanEM %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
select(all_of(c("Gene.Name", "cell.type", "run"))) %>%
distinct() %>%
ungroup()
# All 199 datasets are affected
affected_datasets <- duplicates_cleanEM %>%
ungroup() %>%
select(run) %>%
distinct() %>%
mutate(filenames = paste0(run, ".tab"))
# 51 genes are affected
affected_genes <- duplicates_cleanEM %>%
select(Gene.Name) %>%
distinct() %>%
pull()
# CCDC39
# 00000284862
# 00000145075
# Postion of 00000145075 in 38: 180614008 - 180870933
# Position of CCDC39 in 38:     180602858 - 180684942
mm38 <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Mus_musculus.GRCm38.100.gtf.gz")
hs38 <- readGFF("/home/guille/OneDrive/Ruhrberg_Lab/James/Ensembl_fix/genome_ann/Homo_sapiens.GRCh38.100.gtf.gz")
affected_genes
View(cleanEM)
table_full <- read.csv("/home/guille/OneDrive/Ruhrberg_Lab/James/BECexplorer/benchmark_FULL_table.csv")
table_full <- table_full %>%
filter(Gene.Name.x %in% affected_genes)
View(table_full)
View(table_full)
duplicates_ALDOA <- duplicates_cleanEM %>% filter(Gene.Name == "ALDOA")
View(duplicates_ALDOA)
duplicates_cleanEM <- cleanEM %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
select(all_of(c("Gene.Name", "cell.type", "run"))) %>%
# distinct() %>%
ungroup()
duplicates_ALDOA <- duplicates_cleanEM %>% filter(Gene.Name == "ALDOA")
View(duplicates_ALDOA)
duplicates_ALDOA <- cleanEM %>%
filter(Gene.Name == "ALDOA") %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
# select(all_of(c("Gene.Name", "cell.type", "run"))) %>%
# distinct() %>%
ungroup()
View(duplicates_ALDOA)
duplicates_PPP2R3D <- cleanEM %>%
filter(Gene.Name == "PPP2R3D") %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
# select(all_of(c("Gene.Name", "cell.type", "run"))) %>%
# distinct() %>%
ungroup()
View(duplicates_PPP2R3D)
View(duplicates_ALDOA)
cleanEM <- readRDS("/home/guille/OneDrive/Ruhrberg_Lab/James/BECexplorer/CleanEM.RDS")
cleanEM_problematic <- cleanEM %>% filter(Gene.Name %in% affected_genes)
View(cleanEM_problematic)
cleanEM_problematic <- cleanEM %>%
group_by(Gene.Name, cell.type, run) %>%
filter(n() > 1) %>%
ungroup()
View(cleanEM_problematic)
cleanEM_problematic_active <- cleanEM_problematic %>%
group_by(Gene.Name, cell.type, run) %>%
filter(any(Value=="Active"))
cleanEM_problematic_active <- cleanEM_problematic %>%
group_by(Gene.Name, cell.type, run) %>%
filter(any(cluster=="Active"))
setdiff(cleanEM_problematic, cleanEM_problematic_active)
cleanEM_problematic_notactive <- setdiff(cleanEM_problematic, cleanEM_problematic_active)
View(cleanEM_problematic_notactive)
cleanEM_problematic_notactive_counts <- cleanEM_problematic_notactive %>%
group_by(Gene.Name, cell.type, run) %>%
count()
View(cleanEM_problematic_notactive_counts)
cleanEM_problematic_active_counts <- cleanEM_problematic_active %>%
group_by(Gene.Name, cell.type, run) %>%
count() # 459
cleanEM_problematic_counts <- cleanEM_problematic %>%
group_by(Gene.Name, cell.type, run) %>%
count() # 2081
genes_annoying <- cleanEM_problematic_notactive %>%
ungroup() %>%
select(Gene.Name)
genes_annoying <- cleanEM_problematic_notactive %>%
ungroup() %>%
select(Gene.Name) %>%
distinct()
View(genes_annoying)
genes_annoying <- cleanEM_problematic_notactive %>%
ungroup() %>%
select(Gene.Name) %>%
distinct() %>%
pull()
table_full <- read.csv("/home/guille/OneDrive/Ruhrberg_Lab/James/BECexplorer/benchmark_FULL_table.csv")
table_full2 <- table_full %>%
filter(Gene.Name.x %in% genes_annoying)
View(table_full2)
View(cleanEM_problematic_notactive)
cleanEM_problematic_notactive_bothundet <- cleanEM_problematic_notactive %>%
group_by(Gene.Name, cell.type, run) %>%
filter(all(cluster=="Undetermined"))
View(cleanEM_problematic_notactive_bothundet)
cleanEM_problematic_notactive_bothundet_counts <- cleanEM_problematic_notactive_bothundet %>%
group_by(Gene.Name, cell.type, run) %>%
count()
View(cleanEM_problematic_notactive_bothundet_counts)
View(cleanEM_problematic_notactive_bothundet)
shiny::runApp('OneDrive/Ruhrberg_Lab/James/BECexplorer')
runApp('OneDrive/Ruhrberg_Lab/James/BECexplorer')
shiny::runApp('OneDrive/Ruhrberg_Lab/James/BECexplorer')
runApp('OneDrive/Ruhrberg_Lab/James/BECexplorer')
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(ggplot2)
runApp()
runApp()
{
library(shiny)
library(tidyverse)
library(shinydashboard)
library(ggthemes)
library(gt)
library(shinyjs)
}
CleanBulk <- readRDS('CleanBulk.RDS')
runApp()
runApp()
runApp()
{
library(shiny)
library(tidyverse)
library(shinydashboard)
library(ggthemes)
library(gt)
library(shinyjs)
}
runApp()
runApp()
